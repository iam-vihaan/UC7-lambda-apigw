name: Validate Infrastructure

on: 
  pull_request:
    branches:
      - main

permissions:
  contents: write
  id-token: write

defaults:
  run:
    working-directory: ./Infra

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: "latest"
          github_token: ${{ secrets.GITHUBTOKEN }}

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@master
        continue-on-error: true
        with:
          output_format: cli,sarif
          output_file_path: console,results.sarif
          soft_fail: true

      - name: Upload SARIF file
        if: success() || failure()
        run: |
          if [ -f "results.sarif" ]; then
            echo "SARIF file found. Uploading..."
            gh codeql upload-sarif --sarif=results.sarif
          else
            echo "No SARIF file found. Skipping upload."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}


      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::784733659029:role/oidc-role
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.12.0"  # or latest stable

      - name: Check Terraform Formatting
        run: terraform fmt  -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Test
        run: terraform test || true
        # Optional test command, fallback to avoid workflow failure

      - name: Terraform Plan
        id: plan
        continue-on-error: true
        shell: bash
        env:
          TF_IN_AUTOMATION: "true"
        run: |
          terraform plan -no-color > plan.txt
          cat plan.txt
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          cat plan.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Inject Terraform Plan into README.md
        run: |
          echo -e "\n## Terraform Plan Output\n" >> $GITHUB_WORKSPACE/README.md
          cat plan.txt >> $GITHUB_WORKSPACE/README.md

      - name: Setup Node.js
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '18'

      - name: Install terraform-docs
        run: |
          curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          mv terraform-docs /usr/local/bin/

      - name: Generate Terraform Docs and Commit
        run: |
          git config --local user.email "devops979@gmail.com"
          git config --local user.name "devops979"

          terraform-docs markdown . > README.md.new
          mv README.md.new README.md

          if ! git diff --quiet README.md; then
            git add README.md
            git commit -m "docs: Update README.md with Terraform plan and docs"
            git push
            echo "Successfully committed README.md changes."
          else
            echo "No README.md changes to commit."
          fi

      - name: Update Pull Request with Terraform Plan
        uses: actions/github-script@v7
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUBTOKEN }}
          script: |
            const plan = process.env.PLAN || "No plan output available.";
            const output = [
              "#### Terraform Format and Style ",
              "#### Terraform Initialization ",
              "#### Terraform Validation ",
              "#### Terraform Plan ðŸ“„",
              "",
              "<details><summary>Show Plan</summary>",
              "",
              "```hcl",
              plan,
              "```",
              "",
              "</details>",
              "",
              `*Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`
            ].join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
